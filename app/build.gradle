apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'me.tatarka.retrolambda'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'
    defaultConfig {
        applicationId "singerstone.com.superapp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    // 一定放在buildTypes上面，否则不生效
    signingConfigs {
        debug {
            try {
                storeFile file("../keystore/singerstone.jks")//这里替换成你自己项目生成的keystore的存储路径
                storePassword "cbh123456"
                keyAlias "singerstone"
                keyPassword "cbh123456"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
        release {
            try {
                storeFile file("../keystore/singerstone.jks")//这里替换成你自己项目生成的keystore的存储路径
                storePassword "cbh123456"
                keyAlias "singerstone"
                keyPassword "cbh123456"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/ndk']
            jniLibs.srcDirs=['libs']
        }
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
        }
    }


}
task doSomeRightThing {
    println(">>>>>>>>>>>>>>>app gradle insert task<<<<<<<<<<<<<<<<<<<<<")
}
apply plugin: 'com.singerstone.supergradle'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.10'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
    debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    compile project(':annotations')
    annotationProcessor project(':processors')
    compile project(path: ':inject', configuration: 'default')
    //compile project(':inject')
}
repositories {
    mavenCentral()
}
