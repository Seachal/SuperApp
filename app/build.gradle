apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.singerstone.supergradle'
apply from: 'fat-aar.gradle'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "singerstone.com.superapp"
        minSdkVersion 16
        targetSdkVersion 27
        buildToolsVersion '27.0.0'
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    // 一定放在buildTypes上面，否则不生效
    signingConfigs {
        debug {
            try {
                storeFile file("../keystore/singerstone.jks")//这里替换成你自己项目生成的keystore的存储路径
                storePassword "cbh123456"
                keyAlias "singerstone"
                keyPassword "cbh123456"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
        release {
            try {
                storeFile file("../keystore/singerstone.jks")//这里替换成你自己项目生成的keystore的存储路径
                storePassword "cbh123456"
                keyAlias "singerstone"
                keyPassword "cbh123456"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            aidl.srcDirs = ['src/main/AIDL']
        }
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
        }
    }


}
//这样定义的task会在配置的时候执行
task doSomeRightThing {
    println(">>>>>>>>>>>>>>>app gradle insert task<<<<<<<<<<<<<<<<<<<<<")
}
//上面那句等同于这一句
println(">>>>>>>>>>>>>>>app gradle ⭐️ insert task<<<<<<<<<<<<<<<<<<<<<")

//这样定义能保证需要执行再执行
task doSomeLeftThing doLast {
    println(">>>>>>>>>>>>>>>app gradle insert task<<<<<<<<<<<<<<<<<<<<<")
}
task t1 {
    println 't1 configuration'
    doLast {
        println 't1 execute doLast'
    }
    doFirst {
        println 't1 execute doFirst'
    }
}

// 2.配置阶段
gradle.projectsEvaluated { project ->
    println '配置阶段 projectsEvaluated' + project
}
gradle.taskGraph.whenReady {
    println '配置阶段 whenReady'
}
// 3.执行阶段
gradle.taskGraph.beforeTask { task ->
    println "执行阶段 beforeTask" + task
}
gradle.taskGraph.afterTask { task ->
    println "执行阶段 afterTask " + task
}
// 4.build结束
gradle.buildFinished {
    println '构建结束 buildFinished'
}

project.beforeEvaluate {
    println '配置阶段 beforeEvaluate'
}

project.afterEvaluate {
    println '配置阶段 afterEvaluate'
}

project.tasks.whenTaskAdded { Task theTask ->
    println('add task->' + theTask.getName())
    if (theTask.name == 'assembleDebug' || theTask.name == 'assembleRelease') {
        //theTask.dependsOn(check)
    }
}


//apply plugin: 'com.geektime.systrace-plugin'
/*systrace {
    enable = true
    baseMethodMapFile = "${project.buildDir}/systrace_output/Debug.methodmap"
    blackListFile = "${project.projectDir}/blacklist/blackMethodList.txt"

}*/

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:recyclerview-v7:26.0.0'
    api 'com.android.support:appcompat-v7:27.0.0'
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    api 'com.squareup.retrofit2:retrofit:2.1.0'
    api 'com.squareup.retrofit2:converter-gson:2.1.0'
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    api 'com.squareup.okhttp3:okhttp:3.12.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    api 'io.reactivex.rxjava2:rxjava:2.0.6'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.10'
    api 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    api 'org.javassist:javassist:3.25.0-GA'
    debugApi 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    api project(':annotations')
    annotationProcessor project(':processors')
    //api project(path: ':inject', configuration: 'default')
    api project(':inject')
}
repositories {
    mavenCentral()
}
